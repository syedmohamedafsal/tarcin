gsap.registerPlugin(ScrollMagic), window.$build = {
    swiper: [],
    iso: []
}, window.$wind = jQuery(window), window.$body = jQuery("body"), window.$scene = [], gsap.config({
    nullTargetWarn: !1
}), gsap.defaults({
    ease: "none",
    duration: 1,
    overwrite: "auto"
});
const dsnGrid = {
    isMobile: function(e = !0) {
        let t = !1;
        var n;
        return n = navigator.userAgent || navigator.vendor || window.opera, (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(n) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(n.substr(0, 4))) && (t = !0), t || e && window.$wind.width() <= 991
    },
    convertToJQuery: function(e) {
        return e instanceof jQuery == !1 ? jQuery(e) : e
    },
    tweenMaxParallax: function(e) {
        if (void 0 === $effectScroll || null === $effectScroll) return !1;
        null == e && (e = new ScrollMagic.Controller);
        const t = this;
        return {
            addParrlax: function(n) {
                if (void 0 === n.tween || void 0 === n.id) return !1;
                if (n.tween._totalDuration <= 0) return !1;
                n = jQuery.extend(!0, {
                    triggerHook: 0,
                    duration: "100%",
                    offset: 0,
                    reverse: !0,
                    refreshParallax: !1
                }, n);
                const i = t.convertToJQuery(n.id),
                    o = new ScrollMagic.Scene({
                        triggerElement: i.get(0),
                        triggerHook: n.triggerHook,
                        duration: n.duration,
                        offset: n.offset,
                        reverse: n.reverse
                    });
                var a = !1;
                return !0 === n.reverse && o.setTween(n.tween), o.addTo(e), !0 === n._fixed && (o.setPin(i.get(0)), o.on("enter", (function() {
                    a = !0
                })), o.on("leave", (function() {
                    a = !1, i.css("transform", "")
                })), $effectScroll.getListener((function() {
                    a && i.css("transform", "translateY(" + $effectScroll.getScrollbar().offset.y + "px)")
                }), !1)), !1 === n.reverse && o.on("enter", (function() {
                    void 0 !== n.tween && n.tween.play(), e.removeScene(o), setTimeout((function() {
                        o.destroy(!0), e.destroy(!0), e = null, n.tween = null, n = null
                    }), 300)
                })), !1 !== n.reverse && (n = null), o
            }
        }
    },
    removeAttr: function(e, t) {
        if (void 0 === e || void 0 === t) return;
        let n = e.data(t);
        return void 0 !== n && e.removeAttr("data-" + t), n
    },
    getData: function(e, t, n) {
        if ((e = this.convertToJQuery(e)).length <= 0) return n;
        const i = this.removeAttr(e, "dsn-" + t);
        return void 0 !== i ? i : n
    },
    parallaxIt: function(e, t, n, i) {
        if (t.length <= 0) return;
        const o = t[0].getBoundingClientRect(),
            a = e.pageX - o.left,
            r = e.pageY - o.top,
            s = window.pageYOffset || document.documentElement.scrollTop;
        i = i || .5, n = n || -1, gsap.to(t, i, {
            x: (a - o.width / 2) / o.width * n,
            y: (r - o.height / 2 - s) / o.width * n,
            ease: Power0.easeOut
        })
    },
    parallaxMoveElement: function(e, t, n, i, o) {
        const a = e.target || e,
            r = e.element || e.target || e;
        if (!r.length) return;
        n = void 0 === n ? .5 : parseFloat(n), t = void 0 === t ? 20 : parseFloat(t);
        let s = "";
        a.find("svg.btn-border").length && (s = a.find("svg.btn-border").get(0).outerHTML, a.find("svg.btn-border").remove());
        let d = jQuery('<div class="icon-circle"></div>' + s);
        a.append(d), a.off("mouseleave"), a.off("mouseenter"), a.off("mousemove"), a.on("mouseleave", (function(e) {
            const t = {
                x: 0,
                y: 0,
                ease: Back.easeOut.config(4)
            };
            o && (t.scale = 1);
            const n = [r, d];
            i && n.push(i), gsap.to(n, 1, t)
        })).on("mouseenter", (function(e) {
            const t = {
                transformOrigin: "0 0"
            };
            o && (t.scale = "1.03"), gsap.to([r, d], .3, t)
        })).on("mousemove", (function(e) {
            dsnGrid.parallaxIt(e, r, t, n), dsnGrid.parallaxIt(e, d, 2 * t, n), void 0 !== i && dsnGrid.parallaxIt(e, i, -5, .5)
        }))
    },
    numberText: function(e) {
        return e < 10 && e > 0 ? "0" + e : e
    },
    convertTextLine: function(e, t = "chars", n = !1) {
        return e = this.convertToJQuery(e), Splitting({
            target: e,
            by: t
        }), e.find(".word").addClass("dsn-word-wrapper").each((function(e) {
            jQuery(this).attr("style", "--word-dsn-index:" + e)
        })), e.find(".char").addClass("dsn-chars-wrapper").each((function(e) {
            jQuery(this).attr("style", "--char-dsn-index:" + e)
        })), !n && e.find(".whitespace").length && e.find(".whitespace").each((function() {
            this.outerHTML = " "
        })), {
            el: e,
            word: e.find(".word"),
            char: e.find(".char")
        }
    },
    addSwiper: function(e) {
        $build.swiper.push(e)
    },
    effectAnimate: function() {
        const e = this;
        return {
            allInt: function() {
                this.clearControl().then(() => {
                    this.headerPages()
                }).then(() => {
                    this.parallaxImgHover()
                }).then(() => {
                    this.parallaxImg()
                }).then(() => {
                    this.nextProject()
                }).then(() => {
                    this.animations()
                }).then(() => {
                    this.moveSection()
                }).then(() => {
                    this.dsnScrollTop()
                }).then(() => {
                    this.translateSection()
                }).then(() => {
                    this.changeColor()
                }).then(() => {
                    $effectScroll.scrollNavigate()
                })
            },
            clearControl: async function() {
                await ScrollTrigger.getAll().forEach((function(e) {
                    e.kill()
                })), await ScrollTrigger.update()
            },
            headerPages: function() {
                const e = this;
                jQuery(".dsn-header-parallax").each((function() {
                    const t = jQuery(this),
                        n = t.find(".bg-container.p-absolute.dsn-hero-parallax-img , .elementor-background-video-container");
                    e.animateHeaderDefault(t, n)
                }));
                const t = jQuery("#dsn_header"),
                    n = jQuery("#dsn_sidebar_image.has-transform").find("#hero_image"),
                    i = t.find("#hero_image img"),
                    o = t.find("#hero_content");
                this.animateHeaderDefault(t, i), t.hasClass("has-trans-content") && this.animateHeaderLeftImage(t, n, o)
            },
            animateHeaderDefault: function(e, t) {
                if (!t.length) return;
                const n = gsap.timeline();
                n.to(t, {
                    y: "30%",
                    yoyoEase: !0,
                    ease: "none",
                    overwrite: "none"
                }, 0), ScrollTrigger.create({
                    animation: n,
                    trigger: e,
                    start: "top",
                    scrub: !0
                })
            },
            animateHeaderLeftImage: function(t, n, i) {
                if (!n.length && !i.length) return;
                const o = gsap.timeline();
                n.length && (e.isMobile() ? o.to(n, {
                    opacity: 0,
                    yoyoEase: !0,
                    ease: "none",
                    overwrite: "none"
                }, 0) : o.to(n, {
                    width: jQuery("#side_bar_full").outerWidth(),
                    yoyoEase: !0,
                    ease: "none",
                    overwrite: "none"
                }, 0)), i.length && o.to(i, {
                    y: i.parent().height() - i.height() - i.offset().top,
                    yoyoEase: !0,
                    ease: "none",
                    overwrite: "none"
                }, 0), ScrollTrigger.create({
                    animation: o,
                    trigger: t,
                    start: "top top",
                    end: "+=1500",
                    scrub: !0,
                    pin: !0
                })
            },
            parallaxImgHover: function(t = jQuery(document), n = !0) {
                e.isMobile(n) || t.find('[data-dsn="parallax"]').each((function() {
                    const t = jQuery(this);
                    t.removeAttr("data-dsn"), e.parallaxMoveElement(t, e.getData(t, "move", 20), e.getData(t, "speed", .5), t.find(".dsn-parallax-rev").get(0), t.hasClass("image-zoom"))
                }))
            },
            parallaxImg: async function(t = jQuery(document)) {
                gsap.utils.toArray(t.find('[data-dsn-grid="move-up"] , .box-image-parallax .box-image-bg')).forEach(t => {
                    const n = t.getElementsByTagName("img"),
                        i = e.getData(t, "triggerhook", "bottom"),
                        o = this.tweenImage(jQuery(t), i);
                    !1 !== o && (o.scrollTrigger = {
                        trigger: t,
                        scrub: !0,
                        start: "top " + i
                    }, gsap.to(n, o))
                })
            },
            tweenImage: function(t, n) {
                const i = {
                        scale: 1,
                        y: 0,
                        ease: "none",
                        overwrite: "none"
                    },
                    o = t.find("img:not(.hidden) , video");
                if (t.attr("data-dsn-grid", "moveUp"), o.length > 0) {
                    const a = e.getData(o, "speed", "180");
                    let r = o.hasClass("has-opposite-direction");
                    return r && gsap.set(o, {
                        top: "-=" + a
                    }), "top" === n ? (gsap.set(o, {
                        top: 0
                    }), i.y = r ? "-=" + a : "+=" + a) : gsap.set(o, {
                        height: "+=" + a,
                        y: r ? "+=" + a : "-=" + a
                    }, 0), o.hasClass("has-scale") && (i.scale = 1.1), o.css("perspective", t.width() > 1e3 ? 1e3 : t.width()), i
                }
                return !1
            },
            nextProject: function() {
                const e = jQuery("#next_project");
                if (!e.length) return;
                const t = e.find(".has-box-mod .icon-circle"),
                    n = e.find(".bg-container"),
                    i = {
                        value: 0
                    },
                    o = gsap.timeline();
                n.length && o.to(i, {
                    value: 60,
                    onUpdate: function() {
                        n.css("clip-path", "circle(" + i.value + "% at 70% " + (i.value - 20) + "%)")
                    }
                }, 0), t.length && (o.fromTo(t, {
                    width: 0
                }, {
                    width: "100%"
                }, 0), t.css("transition", "none")), n.find("img").length && o.from(n.find("img"), {
                    scale: 1.5,
                    ease: "none"
                }, 0), e.find(".w-100.pt-30.d-flex.justify-content-between").length && o.from(e.find(".w-100.pt-30.d-flex.justify-content-between"), {
                    autoAlpha: 0,
                    ease: "none"
                }, 0), ScrollTrigger.create({
                    animation: o,
                    trigger: e,
                    end: "top",
                    scrub: !0
                })
            },
            animateFade: async function(e, t, n = 0) {
                t.length && e.gsap.staggerFromTo(t, .8, {
                    y: 20,
                    opacity: 0
                }, {
                    y: 0,
                    opacity: 1,
                    delay: n,
                    overwrite: "none",
                    ease: Back.easeOut.config(1.7)
                }, .2, 0)
            },
            animations: async function(e = jQuery(document)) {
                let t = this;
                e.find('[data-dsn-animate="section"]').each((function() {
                    dsnGrid.getData(this, "animate");
                    const e = jQuery(this),
                        n = {
                            $this: e,
                            gsap: gsap.timeline({
                                paused: !0,
                                ease: "none",
                                overwrite: "none"
                            })
                        },
                        i = e.find(".dsn-up"),
                        o = e.find(".dsn-text");
                    i.removeClass("dsn-up"), o.removeClass("dsn-text"), t.animateFade(n, i).then(() => {
                        t.animateText(n, o)
                    }).then(() => {
                        t.animateSkills(n, e.find(".dsn-skills-item .dsn-animate-skill"))
                    }).then(() => {
                        ScrollTrigger.create({
                            trigger: this,
                            start: "top center",
                            animation: n.gsap
                        })
                    })
                }))
            },
            animateText: function(t, n) {
                n.length && n.each((function() {
                    e.convertTextLine(this, "words"), jQuery(this).addClass("overflow-hidden"), t.gsap.staggerFrom(jQuery(this).find(".dsn-word-wrapper"), .6, {
                        willChange: "transform",
                        transformOrigin: "left",
                        opacity: 0,
                        scaleX: 2,
                        ease: Back.easeOut.config(2)
                    }, .1, 0)
                }))
            },
            moveSection: function(t = jQuery(document)) {
                const n = this;
                t.find('[data-dsn-grid="move-section"]').each((function() {
                    const t = jQuery(this),
                        i = gsap.timeline();
                    n.tweenMoveSection.bind(this, i)(), ScrollTrigger.create({
                        trigger: this,
                        animation: i,
                        start: "top " + e.getData(t, "triggerhook", "bottom"),
                        scrub: !0
                    })
                }))
            },
            tweenMoveSection: function(t) {
                const n = jQuery(this),
                    i = e.getData(n, "from", 180),
                    o = e.getData(n, "to", 0);
                e.getData(this, "grid"), n.addClass("dsn-move-section"), "tablet" === e.getData(this, "responsive") && e.isMobile() ? n.css({
                    opacity: 1,
                    transform: "none"
                }) : t.fromTo(n, {
                    y: i
                }, {
                    y: o,
                    ease: "none",
                    autoAlpha: e.getData(n, "opacity", n.css("opacity"))
                }, 0)
            },
            animateLine: function(e, t) {
                e.gsap.addLabel("line", 0), e.$this.find(".line.line-top").length && e.gsap.from(e.$this.find(".line.line-top").toArray(), 1, {
                    scaleX: 0,
                    transformOrigin: "right"
                }, "line"), e.$this.find(".line.line-left").length && e.gsap.from(e.$this.find(".line.line-left").toArray(), 1, {
                    scaleY: 0,
                    transformOrigin: "top"
                }, "line+=1"), e.$this.find(".line.line-bottom").length && e.gsap.from(e.$this.find(".line.line-bottom").toArray(), 1, {
                    scaleX: 0,
                    transformOrigin: "left"
                }, "line+=2"), e.$this.find(".line.line-right").length && e.gsap.from(e.$this.find(".line.line-right").toArray(), 1, {
                    scaleY: 0,
                    transformOrigin: "bottom"
                }, "line+=3")
            },
            animateSkills: function(e, t) {
                t.each((function(t) {
                    const n = jQuery(this);
                    if (n.hasClass("fill")) n.css("width", "0"), e.gsap.to(n, 1, {
                        width: n.data("width"),
                        onUpdate: function() {
                            n.find(".number").text((n.width() / n.parent().width() * 100).toFixed(0) + "%")
                        }
                    }, .2 * t);
                    else {
                        n.css("stroke-dashoffset", "100");
                        n.parents(".fill-bar").find(".number");
                        e.gsap.to(n, 1, {
                            strokeDashoffset: n.data("width")
                        }, .2 * t)
                    }
                }))
            },
            animateNumbers: function(e, t) {
                e.gsap.addLabel("number", 0), t.each((function(t) {
                    let n = $(this),
                        i = {
                            value: 0
                        };
                    e.gsap.to(i, 4, {
                        value: n.text(),
                        ease: Back.easeOut.config(1.2),
                        onUpdate: function() {
                            n.text(dsnGrid.numberText(i.value.toFixed(0)))
                        },
                        onComplete: function() {
                            n = i = null
                        }
                    }, "number+=" + .2 * t)
                }))
            },
            dsnScrollTop: function() {
                const t = jQuery("#main_content"),
                    n = jQuery("#dsn_scroll_to_top"),
                    i = jQuery("#side_box_right .animate-scroll"),
                    o = n.find(".box-number > span");
                if (!t.length || !n.length && !i.length) return;
                const a = gsap.timeline();
                n.length && !e.isMobile() && a.to(n.find("svg"), {
                    rotation: t.height(),
                    ease: "none"
                }, 0), i.length && window.innerWidth > 1400 && (gsap.set(i, {
                    y: -1 * i.height() + i.parent().height()
                }), a.to(i, 1, {
                    y: 0
                }, 0)), ScrollTrigger.create({
                    trigger: t,
                    animation: a,
                    start: "top",
                    end: "100%-=" + $wind.height(),
                    scrub: !0,
                    onUpdate: function(e) {
                        o.text((100 * e.progress.toFixed(3)).toFixed(0) + "%")
                    }
                })
            },
            translateSection: function(e = jQuery(document)) {
                e.find(".section-image.section-move-image .transform-move-section").each((function() {
                    const e = gsap.timeline(),
                        t = jQuery(this),
                        n = t.find(".swiper-slide");
                    let i = 0;
                    i = n.length * n.width(), i -= t.width(), t.hasClass("move-left") ? e.to(this, {
                        x: -1 * i
                    }) : e.from(this, {
                        x: -1 * i
                    }), ScrollTrigger.create({
                        animation: e,
                        trigger: t,
                        start: "top bottom",
                        scrub: !0
                    })
                }))
            },
            changeColor: function(e = jQuery(document)) {
                e.find("[data-dsn='color']").each((function() {
                    const e = jQuery(this),
                        t = dsnGrid.getData(e, "triggerhook", "top");
                    ScrollTrigger.create({
                        trigger: e,
                        start: "top " + t,
                        scrub: !0,
                        onToggle: e => {
                            const t = jQuery(".v-dark"),
                                n = jQuery(".v-light");
                            $body.toggleClass("v-dark"), t.removeClass("v-dark").addClass("v-light"), n.addClass("v-dark").removeClass("v-light")
                        }
                    })
                }))
            }
        }
    },
    loadMore: function(e, t = {}) {
        e.find(".button-load-more").each((function() {
            const e = jQuery(this),
                n = e.parents(".root-posts"),
                i = dsnGrid.getData(e, "option", {});
            i.attr = dsnGrid.getData(e, "attr", {}), Object.keys(i).length && (i.grida_csrf = dsnParam.dsn_csrf, e.off("click"), e.on("click", (function(o) {
                o.preventDefault(), i.paged = i.paged + 1, isNaN(i.paged) || jQuery.ajax({
                    url: dsnParam.queries,
                    type: "post",
                    data: i,
                    beforeSend: function() {
                        e.addClass("dsn-loading border-style")
                    },
                    success: function(i) {
                        if (!i.status) return;
                        const o = $build.iso[n.find(".dsn-posts").data("dsn-iso")];
                        if (o) {
                            const e = n.find(".dsn-filtering .filtering-wrap .filtering");
                            o.isotope("insert", jQuery.parseHTML(i.html)), e.length && jQuery.each(i.filter_array, (function(t, n) {
                                if (!e.find(".dsn-filter-category-" + t).length) {
                                    let i = jQuery(`<button type="button" class="sm-title-block dsn-filter-category-${t}" data-filter=".${t} , .category-${t}">${n}</button>`);
                                    i.on("click", (function() {
                                        jQuery(this).addClass("active").siblings().removeClass("active"), o.isotope({
                                            filter: jQuery(this).attr("data-filter")
                                        })
                                    })), e.append(i)
                                }
                            }))
                        } else n.find(".dsn-posts").append(i.html);
                        e.removeClass("dsn-loading"), e.removeClass("border-style"), i.has_next || (e.off("click"), e.find("span:not(.progress-no-more)").hide(), e.find(".progress-no-more").show()), void 0 !== t.success && t.success(i)
                    },
                    error: function(e) {
                        console.log(e)
                    },
                    xhr: function() {
                        const t = jQuery.ajaxSettings.xhr();
                        return t.upload.onprogress = function(t) {
                            if (t.lengthComputable) {
                                let n = t.loaded / t.total * 100;
                                gsap.to(e.find(".icon-circle"), {
                                    width: n + "%",
                                    onUpdate: function() {
                                        e.find(".dsn-load-progress-ajax").text(Math.floor(100 * this.progress()) + "%")
                                    }
                                })
                            }
                        }, t
                    }
                })
            })))
        }))
    },
    scrollTop: function(e, t, n, i) {
        n = n || 0;
        let o = 0;
        "number" == typeof e ? o = e : (e = this.convertToJQuery(e)).length && (o = e.get(0).offsetTop), gsap.to(window.Scrollbar.get(document.querySelector("#dsn-scrollbar")) || $wind, t || 1, {
            scrollTo: {
                y: o + (n || 0)
            },
            onComplete: i
        }), o = t = e = null
    },
    removeWhiteSpace: function(e) {
        (e = this.convertToJQuery(e)).contents().filter((function() {
            return 3 === this.nodeType
        })).remove(), e = null
    },
    getBoundingClientRect: function(e) {
        const t = e.getBoundingClientRect();
        return {
            top: t.top,
            right: t.right,
            bottom: t.bottom,
            left: t.left,
            width: jQuery(e).outerWidth() + .2,
            height: jQuery(e).outerHeight(),
            position: "fixed",
            maxWidth: "100%"
        }
    },
    setTitle: function(e) {
        const t = e.match(/<title[^>]*>(.+)<\/title>/);
        t && jQuery("head title").html(t[1])
    },
    setBodyClass: function(e) {
        const t = e.match(/<body[^>]*class="(.+)">/);
        t && $body.attr("class", t[1])
    },
    updateScripts: function(e) {
        $body.find("script:not([src])").each((function() {
            (jQuery(this).text().search(/elementorFrontendConfig/) > -1 || jQuery(this).text().search(/ElementorProFrontendConfig/) > -1) && jQuery(this).remove()
        })), jQuery(e).filter("script:not([src])").each((function() {
            (jQuery(this).text().search(/elementorFrontendConfig/) > -1 || jQuery(this).text().search(/ElementorProFrontendConfig/) > -1) && $body.append(jQuery(this))
        })), jQuery(e).filter('script[src*="plugins/elementor"]').each((function() {
            $body.find('script[src="' + jQuery(this).attr("src") + '"]').length || $body.append(jQuery(this))
        }));
        const t = ['link[id*="elementor"]', 'link[id*="wp-block"]', 'style[id*="elementor"]', 'link[id*="google-fonts"]', 'link[id*="eael"]', 'style[id*="eael"]'].join(","),
            n = jQuery("head"),
            i = jQuery("<head></head>").html(e.match(/<head[^>]*>([\s\S.]*)<\/head>/i)[0]),
            o = n.find(t),
            a = i.find(t);
        n.append(a), o.remove()
    },
    updateElement: function(e, t) {
        const n = jQuery(e).filter(t);
        n.length && jQuery(t).replaceWith(n)
    },
    updateDashAdmin: function(e) {
        this.updateElement(e, "#wpadminbar")
    },
    UpdateLang: function() {
        this.updateElement(data, ".lang-switcher")
    },
    initAjax: function(e) {
        this.setTitle(e), this.setBodyClass(e), this.updateScripts(e), this.updateDashAdmin(e)
    },
    dsnAjax: function(e = {}) {
        var t, n, i = gsap.timeline();
        return {
            mainRoot: jQuery("#main_root"),
            ajaxClick: jQuery("a.effect-ajax"),
            effectAjax: function(e) {
                if (e) $body.addClass("dsn-ajax-effect");
                else {
                    if (!1 !== e) return $body.hasClass("dsn-ajax-effect");
                    $body.removeClass("dsn-ajax-effect")
                }
            },
            ajaxLoad: function() {
                if (!$body.hasClass("dsn-ajax")) return;
                let e = this;
                this.ajaxClick.off("click"), this.ajaxClick.on("click", (function(t) {
                    t.preventDefault();
                    let n = jQuery(this),
                        i = n.attr("href"),
                        o = n.data("dsn-ajax");
                    i.indexOf("#") >= 0 || void 0 === i ? n = i = o = null : e.effectAjax() || (e.effectAjax(!0), jQuery.ajax({
                        url: i,
                        dataType: "html",
                        beforeSend: () => {
                            e.animateAjaxStart(o, n)
                        },
                        success: function(t) {
                            try {
                                history.pushState(null, "", i), e.animateAjaxEnd(t)
                            } catch (e) {
                                console.error(e), window.location = i
                            }
                        },
                        error: function(e) {
                            console.error(e), window.location = i
                        }
                    }))
                }))
            },
            animateAjaxStart: async function(e, t) {
                switch (i.clear(), i.addLabel("beforeSend"), e) {
                    case "slider":
                        await this.ajaxSlider(t);
                        break;
                    case "next":
                        await this.ajaxNextProject(t);
                        break;
                    case "work":
                        await this.ajaxWork(t);
                        break;
                    default:
                        await this.ajaxNormal()
                }
                $effectScroll.locked(), i.call((function() {
                    dsnGrid.scrollTop(0, .01)
                }))
            },
            ajaxNormal: function() {
                const e = jQuery('<div class="dsn-ajax-loader dsn-ajax-normal"></div>');
                $body.append(e), i.to(e, 1, {
                    autoAlpha: 1,
                    ease: Expo.easeOut
                }, 0)
            },
            addElement: function(e, t, n) {
                if (void 0 === t || t.length <= 0) return;
                (void 0 === n || n.length <= 0) && (n = t), t.removeClass("line-after").removeClass("line-before");
                let i = t.clone(),
                    o = n[0].getBoundingClientRect();
                return void 0 === o && (o = {
                    left: 0,
                    top: 0
                }), i.css(Object.assign({
                    position: "fix",
                    display: "block",
                    transform: "",
                    transition: "",
                    objectFit: "cover"
                }, dsnGrid.getBoundingClientRect(n[0]), t.dsnGridStyleObject())), e.append(i), i
            },
            dsnCreateElement: function(e, i, o, a, r = {}) {
                const s = jQuery('<div class="dsn-ajax-loader"></div>'),
                    d = gsap.timeline();
                return t = this.addElement(s, e, i), (n = this.addElement(s, o, a)).find(".dsn-chars-wrapper").length || dsnGrid.convertTextLine(n), void 0 !== r.before && r.before(s, t, n), $body.append(s), d.to(s, 1, {
                    autoAlpha: 1,
                    ease: Power4.easeInOut
                }), void 0 !== r.after && r.after(s, t, n), d
            },
            ajaxSlider: function(e) {
                const t = e.parents(".slide-content"),
                    n = t.data("dsn-id"),
                    o = t.parents(".main-slider").find('.bg-container .swiper-slide[data-dsn-id="' + n + '"] .cover-bg').first(),
                    a = t.find(".title"),
                    r = t.parents(".main-slider").find(".bg-container");
                o.removeClass("hidden"), i.add(this.dsnCreateElement(o, r, a, a))
            },
            ajaxNextProject: function(e) {
                const t = e.parents(".next-project"),
                    n = t.find(".bg-container"),
                    o = e;
                i.add(this.dsnCreateElement(n, t, o, o, {
                    before: function(e, t, n) {
                        t.css({
                            transition: "clip-path 1s",
                            clipPath: "circle(100% at 70% 39.9839%)"
                        }), gsap.to(n.find(".icon-circle"), {
                            width: 0
                        }), gsap.to(n, {
                            padding: 0
                        })
                    }
                }))
            },
            ajaxWork: function(e) {
                const t = e.parents(".dsn-item-post"),
                    n = t.find(".box-image-bg"),
                    o = t.find(".post-title");
                i.add(this.dsnCreateElement(n, n, o, o))
            },
            completeElement: function(e) {
                const o = jQuery('[data-dsn-ajax="img"]').first(),
                    a = jQuery('[data-dsn-ajax="title"]').first(),
                    r = {
                        value: "0%"
                    };
                o.length || a.length || i.to(r, 1, {
                    value: "100%",
                    onUpdate: function() {
                        e.css("clip-path", "inset(0% 0% " + r.value + " 0%)")
                    },
                    ease: Circ.easeIn
                });
                let s = {
                    top: 0,
                    left: 0,
                    width: "100%",
                    height: "100%",
                    transform: "none"
                };
                if (n.length) {
                    a.find(".dsn-chars-wrapper").length || dsnGrid.convertTextLine(a), s = a.offset(), void 0 === s && (s = {
                        top: 0,
                        left: 0
                    }), i.set(n.find(".dsn-chars-wrapper"), {
                        x: n.offset().left - s.left,
                        y: n.offset().top - s.top
                    }, "-=1");
                    const e = n.find(".dsn-chars-wrapper").toArray();
                    n.offset().left < s.left && e.reverse(), i.set(n, {
                        top: s.top,
                        left: s.left
                    }, "-=0.8"), i.to(n, .4, {
                        padding: "0",
                        borderWidth: 0,
                        yoyo: !0
                    }), i.to(n, .8, {
                        css: a.dsnGridStyleObject(),
                        yoyo: !0
                    }, "-=0.8"), n.css("width", a.outerWidth()), i.set(e, {
                        color: n.css("color")
                    }), i.staggerTo(e, .8, {
                        y: "0",
                        x: "0",
                        ease: Back.easeOut.config(1),
                        color: a.css("color")
                    }, .02, "-=0.35")
                }
                o.length && (s = {
                    top: o.offset().top,
                    left: o.offset().left,
                    width: o.width(),
                    height: o.height(),
                    transform: o.find(".dsn-hero-parallax-img").css("transform")
                }), t.length && i.to(t, {
                    duration: .9,
                    top: s.top,
                    left: s.left,
                    width: s.width,
                    height: s.height,
                    objectFit: "cover",
                    borderRadius: 0,
                    ease: Back.easeIn.config(1),
                    transform: s.transform
                }, "-=0.8"), i.to(e, .5, {
                    autoAlpha: 0,
                    ease: "none"
                })
            },
            animateAjaxEnd: async function(t) {
                await i.call(() => {
                    dsnGrid.initAjax(t), this.mainRoot.html(jQuery(t).filter("#main_root").html()), e.success && e.success(t), "undefined" != typeof wpcf7 && jQuery(".wpcf7-form").length && jQuery(".wpcf7-form").each((function() {
                        wpcf7.init(this)
                    })), "undefined" != typeof wpcf7cf && jQuery(".wpcf7-form").length && jQuery(".wpcf7-form").each((function() {
                        wpcf7cf.initForm(jQuery(this))
                    })), void 0 !== window.elementorFrontend && elementorFrontend.init()
                }, null, "+=1");
                const n = await jQuery(".dsn-ajax-loader");
                n.hasClass("dsn-ajax-normal") ? i.to(n, 1, {
                    autoAlpha: 0,
                    ease: Expo.easeIn
                }) : this.completeElement(n), i.eventCallback("onComplete", function() {
                    n.remove(), this.effectAjax(!1), console.log("ok"), e.onComplete && e.onComplete()
                }.bind(this))
            },
            backAnimate: function(e) {
                e && (window.location = e)
            }
        }
    },
    endAnimate: function(e, t) {
        null != t && (e.one("webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend", t), e = t = null)
    },
    elementHover: function(e, t, n, i, o) {
        e = this.convertToJQuery(e), (t = this.convertToJQuery(t)).on("mouseenter", (function(t) {
            i ? i.bind(this, t)() : e.addClass(n)
        })).on("mouseleave", (function(t) {
            o ? o.bind(this, t)() : e.removeClass(n)
        }))
    },
    mouseMove: function(e, t) {
        if (this.isMobile() || null == e) return;
        e = this.convertToJQuery(e);
        let n = !1;
        $body.on("mousemove", (function(i) {
            gsap.to(e, t.speed || .5, {
                left: i.clientX,
                top: i.clientY
            }), void 0 !== t && void 0 !== t.onUpdate && t.onUpdate(i, i.pageX, i.pageY, e), void 0 !== t && void 0 !== t.onComplete && (n = !0, dsnGrid.endAnimate(e, (function(i) {
                n && t.onComplete(i, e), n = !1
            })))
        }))
    },
    pageLoad: function(e, t, n, i) {
        const o = window.performance.timing,
            a = -1 * (o.loadEventEnd - o.navigationStart) / 1e3 % 50 * 10;
        let r = e,
            s = t > e ? 1 : -1,
            d = Math.abs(Math.floor((a + n) / 100));
        const l = setInterval((function() {
            r += s, i(r), r >= t && clearInterval(l)
        }), d);
        return l
    },
    session: function() {
        return {
            isSupport: function() {
                return void 0 !== window.sessionStorage
            },
            set: function(e, t) {
                this.isSupport() && sessionStorage.setItem("dsn-" + e, t)
            },
            get: function(e) {
                return this.isSupport() ? sessionStorage.getItem("dsn-" + e) : null
            },
            remove: function(e) {
                this.isSupport() && sessionStorage.removeItem("dsn-" + e)
            }
        }
    },
    getParameter: function(e) {
        var t = null,
            n = [];
        return location.search.substr(1).split("&").forEach((function(i) {
            (n = i.split("="))[0] === e && (t = decodeURIComponent(n[1]))
        })), t
    },
    initTheme: function() {
        $body.hasClass("dsn-change-color") && ($body.removeClass("dsn-change-color"), $body.find(".v-dark").removeClass("v-dark").addClass("v-light"), $body.find(".v-light").addClass("v-dark").removeClass("v-light"))
    },
    compareVersion: function(e, t) {
        if ("string" != typeof e) return !1;
        if ("string" != typeof t) return !1;
        e = e.split("."), t = t.split(".");
        const n = Math.min(e.length, t.length);
        for (let i = 0; i < n; ++i) {
            if (e[i] = parseInt(e[i], 10), t[i] = parseInt(t[i], 10), e[i] > t[i]) return 1;
            if (e[i] < t[i]) return -1
        }
        return e.length == t.length ? 0 : e.length < t.length ? -1 : 1
    },
    WebGLDistortionHoverEffects: function(e, t) {
        let n = this.convertToJQuery(t.parent);
        if (!(n.length <= 0) || e.imgs.length) return delete t.parent, e.parent = n.get(0), n = null, new function(e, t, n) {
            var i, o = t.parent || console.warn("no parent"),
                a = t.displacement || console.warn("displacement image missing"),
                r = [],
                s = this,
                d = !1,
                l = e.convertToJQuery(n.nextEl),
                c = e.convertToJQuery(n.prevEl),
                h = 0,
                u = 0;

            function f(e = 0, t) {
                let n, i;
                this.width = o.offsetWidth, this.height = o.offsetHeight, this.renderer.setSize(this.width, this.height), this.camera.aspect = this.width / this.height, this.imageAspect = !0 === t ? r[e].image.height / r[e].image.width : this.mat.uniforms.texture.value.image.height / this.mat.uniforms.texture.value.image.width, this.height / this.width > this.imageAspect ? (n = this.width / this.height * this.imageAspect, i = 1) : (n = 1, i = this.height / this.width / this.imageAspect);
                const a = this.camera.position.z;
                this.camera.fov = 180 / Math.PI * 2 * Math.atan(1 / (2 * a)), this.plane.scale.x = this.camera.aspect, this.plane.scale.y = 1, gsap.to(this.mat.uniforms.resolution.value, .2, {
                    x: this.width,
                    y: this.height,
                    z: n,
                    w: i,
                    delay: .5,
                    yoyo: !0,
                    onUpdate: function() {
                        this.camera.updateProjectionMatrix(), this.animate()
                    }.bind(this),
                    ease: "none"
                })
            }

            function g() {
                let e = "";
                return e = n.vertical ? "vec2 distortedPosition = vec2(uv.x, uv.y - dispFactor * (disp.r*effectFactor));\n\t\t\t\t\tvec2 distortedPosition2 = vec2(uv.x, uv.y + (1.0 - dispFactor) * (disp.r*effectFactor));" : " vec2 distortedPosition = vec2(uv.x + dispFactor * (disp.r*effectFactor), uv.y);\n            vec2 distortedPosition2 = vec2(uv.x - (1.0 - dispFactor) * (disp.r*effectFactor), uv.y);\n\n            ", `\n        varying vec2 vUv;\n\n        uniform sampler2D texture;\n        uniform sampler2D texture2;\n        uniform sampler2D disp;\n\n        uniform float dispFactor;\n        uniform float effectFactor;\n\t\tuniform vec4 resolution;\n\n\n\n        void main() {\n\n            vec2 uv = (vUv - vec2(0.5))*resolution.zw + vec2(0.5);\n            \n\n            vec4 disp = texture2D(disp, uv);\n\n            ${e}\n\n            vec4 _texture = texture2D(texture, distortedPosition);\n            vec4 _texture2 = texture2D(texture2, distortedPosition2);\n\n            vec4 finalTexture = mix(_texture, _texture2, dispFactor);\n\n            gl_FragColor = finalTexture;\n\n        }\n    `
            }

            function p(e, t) {
                d = !0, void 0 !== n.onStart && n.onStart.bind(this, e, t)(), f.bind(this)(e, !0)
            }

            function m() {
                this.animate(), void 0 !== n.onUpdate && n.onUpdate.bind(this)()
            }

            function v() {
                this.mat.uniforms.texture.value = r[u], this.mat.uniforms.dispFactor.value = 0, d = !1, void 0 !== n.onEnd && n.onEnd.bind(this)()
            }
            jQuery(o).addClass("three-js-loader bg-three-js"), t = jQuery.extend(!0, {
                imgs: [],
                intensity: 1,
                speedIn: 1.6,
                speedOut: 1.2,
                hover: !1,
                easing: Expo.easeOut
            }, t), this.scene = new THREE.Scene, this.width = window.innerWidth, this.height = window.innerHeight, async function() {
                return this.ratio = window.devicePixelRatio, new THREE.WebGLRenderer({
                    canvas: this.canvas,
                    powerPreference: "high-performance"
                })
            }().then(e => (this.renderer = e, this.renderer.setPixelRatio(window.devicePixelRatio), this.renderer.setClearColor(16777215, 0), this.renderer.setSize(this.width, this.height), this.width = o.offsetWidth, this.height = o.offsetHeight, o.appendChild(this.renderer.domElement), this.renderer)).then(() => {
                this.camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, .001, 1e3), this.camera.position.set(0, 0, 2)
            }).then(() => {
                this.manager = new THREE.LoadingManager
            }).then(() => {
                this.loader = new THREE.TextureLoader(this.manager), (i = this.loader.load(a)).wrapS = i.wrapT = THREE.RepeatWrapping, t.imgs.forEach((e, t) => {
                    let n = this.loader.load(e);
                    n.magFilter = THREE.LinearFilter, n.minFilter = THREE.LinearFilter, n.anisotropy = this.renderer.capabilities.getMaxAnisotropy(), r[t] = n, n = null
                })
            }).then(() => {
                this.mat = new THREE.ShaderMaterial({
                    extensions: {
                        derivatives: "#extension GL_OES_standard_derivatives : enable"
                    },
                    side: THREE.DoubleSide,
                    uniforms: {
                        effectFactor: {
                            type: "f",
                            value: t.intensity
                        },
                        dispFactor: {
                            type: "f",
                            value: 0
                        },
                        texture: {
                            type: "t",
                            value: r[0]
                        },
                        texture2: {
                            type: "t",
                            value: r.length > 1 ? r[1] : r[0]
                        },
                        disp: {
                            type: "t",
                            value: i
                        },
                        resolution: {
                            type: "v4",
                            value: new THREE.Vector4
                        }
                    },
                    vertexShader: "\n\t\t\tvarying vec2 vUv;\n\t\t\tvoid main() {\n\t\t\t\tvUv = uv;\n\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t}",
                    fragmentShader: g(),
                    transparent: !0,
                    opacity: 1
                })
            }).then(() => {
                this.geometry = new THREE.PlaneGeometry(1, 1, 2, 2), this.plane = new THREE.Mesh(this.geometry, this.mat)
            }).then(() => {
                this.scene.add(this.plane)
            }).then(() => {
                this.animate = function() {
                    this.renderer.render(this.scene, this.camera)
                }, this.manager.onLoad = function() {
                    jQuery(o).removeClass("three-js-loader"), !0, f.bind(s, 0)(), window.addEventListener("resize", f.bind(s, 0))
                }
            }).then(() => {
                l.length && l.on("click", (function() {
                    s.next()
                })), c.length && c.on("click", (function() {
                    s.prev()
                }))
            }).then(() => {
                void 0 !== n.onComplete && n.onComplete.bind(this)()
            }), this.next = function() {
                void 0 === this.renderer || d || (this.mat.uniforms.effectFactor.value = t.intensity, h = u, u = (u + 1) % r.length, this.changeTo(u))
            }, this.prev = function() {
                void 0 === this.renderer || d || (this.mat.uniforms.effectFactor.value = -1 * t.intensity, h = u, u = 0 === u ? r.length - 1 : Math.abs((u - 1) % r.length), this.changeTo(u))
            }, this.changeTo = function(e) {
                this.mat.uniforms.texture2.value = r[e], gsap.to(this.mat.uniforms.dispFactor, t.speedIn, {
                    value: 1,
                    ease: t.easing,
                    onStart: p.bind(this, u, h),
                    onUpdate: m.bind(this, u, h),
                    onComplete: v.bind(this, u, h)
                })
            }
        }(this, e, t)
    },
    loadData: function(e = jQuery(document), t) {
        e.find("[data-dsn-" + t + "]").each((e, n) => {
            ! function(e, n) {
                const i = jQuery(n),
                    o = dsnGrid.getData(i, "srcset", ""),
                    a = jQuery("<img>");
                a.attr("src", dsnGrid.getData(i, t, "")), o && a.attr("srcset", o), a.load((function() {
                    i.attr(t, jQuery(this).attr(t)), o && a.attr("srcset", o)
                }))
            }(0, n)
        })
    }
};
jQuery.fn.dsnGridStyleObject = function() {
    return this.css(["font-size", "font-style", "font-weight", "line-height", "letter-spacing", "color"])
};
//# sourceMappingURL=dsn-grid.min.js.map